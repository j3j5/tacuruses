image: eu.gcr.io/tnw-automation/php:8.3-fpm

stages: # List of stages for jobs, and their order of execution
  - dependencies
  - test

Composer:
  stage: dependencies
  before_script:
    - php -v
    - composer -V
    - composer check-platform-reqs
    - composer config cache-files-dir .composer-cache
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    # Just to make sure they work
    - php artisan config:cache
    - php artisan route:cache
  artifacts:
    paths:
      - vendor
    expire_in: 1 days
    when: always
  cache:
    key:
      files:
        - composer.lock
    paths:
      - .composer-cache/
  needs: []

NPM:
  stage: dependencies
  before_script:
    - node -v
    - npm -v
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run prod
  artifacts:
    paths:
      - public/
    expire_in: 1 days
    when: always
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  needs: []

PHP-CS-Fixer:
  stage: test
  before_script:
    - php -v
    - php vendor/bin/php-cs-fixer -V
  script:
    - vendor/bin/php-cs-fixer fix --dry-run -vv
  dependencies:
    - Composer
  needs: ["Composer"]

Larastan:
  stage: test
  before_script:
    - php -v
    - ./vendor/bin/phpstan -V
  script:
    - ./vendor/bin/phpstan analyse
    - ./vendor/bin/phpstan analyse --error-format gitlab > phpstan.json
  artifacts:
    when: always
    reports:
      codequality: phpstan.json
    expire_in: 1 days
  dependencies:
    - Composer
  needs: ["Composer"]

PHPUnit:
  stage: test
  before_script:
    - php -v
    - php vendor/bin/phpunit --version
  script:
    - php -d xdebug.mode=coverage vendor/bin/phpunit --config=phpunit.xml.dist --coverage-text --colors=never --coverage-cobertura=cobertura-coverage.xml --log-junit report.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    paths:
      - storage/logs # for debugging
      - storage/_reports # for debugging
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura-coverage.xml
    expire_in: 1 days
    when: always
  dependencies:
    - Composer
    - NPM
  needs: ["Composer", "NPM"]

Security Check:
  stage: test
  before_script:
    - composer -V
  script:
    - composer update --dry-run roave/security-advisories
  dependencies:
    - Composer
  needs: ["Composer"]
